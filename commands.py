import translators as ts
import random
import requests
import settings

# module's data
info_answers = ({'1': '–ù–∏–≤–∫–æ–µ–º —Å–ª—É—á–∞–µ',
               '2': '–ù–µ—Ç',
               '3': '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ—Ç', 
               '4': '–í–æ–∑–º–æ–∂–Ω–æ', 
               '5': '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –¥–∞', 
               '6': '–î–∞',
               '7': '–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –¥–∞'})

# module "probability"
def probability_number():
    return '–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: '+ str(random.randint(0, 100)) + '%'

# module "info"
def get_info():
    number = random.randint(1, 7)
    for ans in info_answers:
        if ans == str(number):
            return info_answers[ans]

# module "transalte"
def translate(request_message):
    if request_message == '–ø–µ—Ä–µ–≤–æ–¥' or request_message == '–ø–µ—Ä–µ–≤–æ–¥ ':
        return '–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç'
    return ts.translate_html(request_message[8:], translator=ts.bing, to_language='ru', translator_params={})
def mem_translate(request_message):
    if request_message == '–º–ø–µ—Ä–µ–≤–æ–¥' or request_message == '–º–ø–µ—Ä–µ–≤–æ–¥ ':
        return '–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç'
    return ts.translate_html(request_message[9:], translator=ts.google, to_language='ru', translator_params={})

# module "weather"
def open_weather_map_service():
    base_url = "http://api.openweathermap.org/data/2.5/weather"
    city_id = '479123'
    query = {
        'id': city_id,
        'appID': settings.open_weather_map_token # your weather token
    }
    weather_data = requests.get(base_url, params=query).json()

    # translate weather parse
    def translate_parse_into_russian(text):
        return ts.translate_html(text, translator=ts.google, to_language='ru', translator_params={})

    # weather parse
    now_weather = {
        'main': weather_data['weather'][0]['description'],
        'temp': weather_data['main']['temp'],
        'humidity': weather_data['main']['humidity'],
        'pressure': weather_data['main']['pressure'],
        'visibility': weather_data['visibility'],
        'wind': weather_data['wind']['speed']
    }

    return (f"–ü–æ–≥–æ–¥–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞: –£–ª—å—è–Ω–æ–≤—Å–∫\n"
            f"\nüåÜ–ù–∞ —É–ª–∏—Ü–µ —Å–µ–π—á–∞—Å: {translate_parse_into_russian(now_weather['main'])}" 
            f"\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(now_weather['temp'] - 273)}‚ÑÉ"
            f"\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {now_weather['humidity']}%"
            f"\nüå´–î–∞–≤–ª–µ–Ω–∏–µ: {round(now_weather['pressure'] / 1.3)}–º–º.—Ä—Ç.—Å—Ç–ª–±"
            f"\nüï¥–í–∏–¥–∏–º–æ—Å—Ç—å: {(now_weather['visibility']/ 1000)}–∫–º" 
            f"\nüå¨–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {now_weather['wind']}–º/—Å")